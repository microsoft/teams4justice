name: Notification Hub Build & Deploy

on:
  workflow_run:
    workflows: ["UI Build and Deploy"]
    types:
      - completed
      - requested
  push:
    branches:
      - main
      - release/**
    paths:
      - ".github/workflows/notification-hub.yml"
      - ".github/action/yarn-bundle-to-azure-function/**"
      - "deploy/environments.yml"
      - "deploy/deploy_app_service.sh"
      - "deploy/deploy_function.sh"
      - "src/notification-hub/**"
      - "src/shared/**"
      - "terraform/notification_hub/**"
      - "terraform/notification_hub_post/**"
      - "terraform/modules/function/**"
      - "terraform/modules/event_grid_subscriptions/**"
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  NODE_VERSION: "14.x"

jobs:
  notification_hub_build:
    name: Notification Hub Build
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      TIME_ZONE_OPTIONS: ${{ vars.TIME_ZONE_OPTIONS }}
      DEFAULT_TIME_ZONE: ${{ vars.DEFAULT_TIME_ZONE }}
    outputs:
      environment_matrix: ${{ steps.yaml2json.outputs.data }}
    steps:
      - name: Node Set up Environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install Azure Functions Dependency
        run: npm i -g azure-functions-core-tools@3 --unsafe-perm true

      - name: yarn install, build and test
        working-directory: src/notification-hub
        run: |
          yarn install
          yarn build

      - name: Test the build
        working-directory: src/notification-hub
        run: |
          yarn test

      - name: Prepare artifacts folder
        run: mkdir ~/artifacts

      - name: Pack Notification Hub
        uses: ./.github/actions/yarn-bundle-to-azure-function
        with:
          source_folder: src/notification-hub
          output_file: ~/artifacts/notification_hub_function.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_artifacts
          path: ~/artifacts/

      - name: YAML to JSON Converter
        id: yaml2json
        uses: fabasoad/yaml-json-xml-converter-action@v1.0.11
        with:
          path: deploy/environments.yml
          from: yaml
          to: json
  notification_hub_deploy:
    name: Notification Hub Deploy
    runs-on: ubuntu-latest
    needs: ["notification_hub_build"]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.notification_hub_build.outputs.environment_matrix) }}
    environment:
      name: dev
    env:
      ARM_CLIENT_ID: ${{ secrets[matrix.secretArmClientId] }}
      ARM_CLIENT_SECRET: ${{ secrets[matrix.secretArmClientSecret] }}
      ARM_SUBSCRIPTION_ID: ${{ secrets[matrix.secretSubscriptionId] }}
      ARM_TENANT_ID: ${{ secrets[matrix.secretTenantId] }}
      ARM_SAS_TOKEN: ${{ secrets[matrix.secretStorageSAS] }}
      TIME_ZONE_OPTIONS: ${{ vars.TIME_ZONE_OPTIONS }}
      DEFAULT_TIME_ZONE: ${{ vars.DEFAULT_TIME_ZONE }}
    steps:
      - name: Checkout the repository
        if: ${{ github.ref == matrix.pinnedRef }}
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        if: ${{ github.ref == matrix.pinnedRef }}
        with:
          name: build_artifacts
          path: ~/artifacts/
      - name: Setup Terraform
        if: ${{ github.ref == matrix.pinnedRef }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.1
          terraform_wrapper: false
      - name: Deploy Infrastructure
        if: ${{ github.ref == matrix.pinnedRef }}
        uses: ./.github/actions/run-terraform-deploy
        with:
          backendStorageAccountName: ${{ matrix.terraformBackendStorageAccountName }}
          backendResourceGroupName: ${{ matrix.terraformResourceGroupName }}
          backendStorageContainerName: ${{ matrix.terraformBackendStorageContainerName }}
          backendStateFile: notification_hub.tfstate
          backendKeyVaultSasTokenId: ${{ matrix.keyVaultSasTokenId }}
          terraformWorkspace: ${{ matrix.environmentName }}
          terraformPath: terraform/notification_hub
          terraformLogs: ${{ vars.TF_LOG }}
          terraformArgs: >
            -var 'location=${{ matrix.location }}'
            -var 'org_name=${{ matrix.orgName }}'
            -var 'project_name=${{ matrix.projectName }}'
            -var 'lock_resource_group=${{ vars.LOCK_RESOURCE_GROUP }}'
      - name: Deploy Applications
        if: ${{ github.ref == matrix.pinnedRef }}
        run: |
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          ./deploy/deploy_function.sh -g ${{ matrix.orgName }}-${{ matrix.projectName }}-${{ matrix.environmentName }}-${{ matrix.NotificationServiceName }}-${{ matrix.resourceGroup }} -e ${{ matrix.environmentName }} -d "terraform/notification_hub" -a "~/artifacts/notification_hub_function.zip" -s "src/notification-hub/deploy/"
      - name: Deploy Event Grid Subscriptions
        if: ${{ github.ref == matrix.pinnedRef }}
        uses: ./.github/actions/run-terraform-deploy
        with:
          backendStorageAccountName: ${{ matrix.terraformBackendStorageAccountName }}
          backendResourceGroupName: ${{ matrix.terraformResourceGroupName }}
          backendStorageContainerName: ${{ matrix.terraformBackendStorageContainerName }}
          backendStateFile: notification_hub_post.tfstate
          backendKeyVaultSasTokenId: ${{ matrix.keyVaultSasTokenId }}
          terraformWorkspace: ${{ matrix.environmentName }}
          terraformPath: terraform/notification_hub_post
          terraformLogs: ${{ vars.TF_LOG }}
          terraformArgs: >
            -var 'location=${{ matrix.location }}'
            -var 'org_name=${{ matrix.orgName }}'
            -var 'project_name=${{ matrix.projectName }}'
